@using System.Globalization
@using MusicShareWeb.Models
@model MusicShareWeb.Models.DerzkieSchi.GuitarsModel
           
@{
    Layout = "../Shared/Layout.cshtml";
}

<div class="guitar-list">
    @{
        var i = -1;
    }
    @foreach (var guitarSummary in Model.GuitarsSummary) {
        i++;
        var form = "form" + i;
        using (Html.BeginForm("SaveGuitarSummary", "DerzkieSchi", FormMethod.Post, new {id = "form" + @i, onsubmit = "return SaveGuitar('" + @form + "');"})) {
            <input type="hidden" value="@guitarSummary.GuitarWithColorId" name="guitarsummary.GuitarWithColorId" />
            <div class="guitar-list__guitar-node">
                <img class="guitar-node__image" src="@guitarSummary.ImageUrl" alt="noImg"/>
                <div style="display: inline-block;">
                    <input type="hidden" name="guitarsummary.ImageUrl" value="@guitarSummary.ImageUrl" />
                    <input type="text" class="imgUrl" placeholder="Новое изображение"/><br/>
                    @Html.EditorFor(x => guitarSummary.IsGreatQualityPhoto) Очень качественное фото<br/>
                    <input type="button" value="Обновить изображение" onclick="UpdateImage('@form')" />
                </div>
                <div style="display: inline-block; margin-left: 30px;">
                    @Html.Partial("DropDown", new DropDownModel {
                        Name = "guitarSummary.BrandId",
                        SelectedId = guitarSummary.BrandId.ToString(CultureInfo.InvariantCulture),
                        KeyValues = Model.Brands.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.Brands.Select(b => b.Name), (brandId, brandName) => new {key = brandId, value = brandName})
                            .ToDictionary(x => x.key, x => x.value)
                    })<br/>
                    @Html.Partial("DropDown", new DropDownModel {
                        Name = "guitarSummary.FormId",
                        SelectedId = guitarSummary.FormId.ToString(CultureInfo.InvariantCulture),
//                        KeyValues = Model.Forms.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.Forms.Select(b => b.Name), (formId, formName) => new {key = formId, value = formName})
//                            .ToDictionary(x => x.key, x => x.value)
                    })<br/>
@*                    <input type="text" name="guitarsummary.ModelId" value="@guitarSummary.ModelId" /><br/>*@
                    @Html.Partial("DropDown", new DropDownModel {
                        Name = "guitarSummary.ModelId",
                        SelectedId = guitarSummary.ModelId.ToString(CultureInfo.InvariantCulture),
                        KeyValues = Model.GuitarsWithModel.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.GuitarsWithModel.Select(b => b.Model), (guitarWithModelId, guitarModel) => new { key = guitarWithModelId, value = guitarModel })
                            .ToDictionary(x => x.key, x => x.value)
                    })<br />
                    @Html.Partial("DropDown", new DropDownModel {
                        Name = "guitarSummary.ColorFullId",
                        SelectedId = guitarSummary.ColorFullId.ToString(CultureInfo.InvariantCulture),
                        KeyValues = Model.FullColors.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.FullColors.Select(b => b.Name), (colorFullId, colorFullName) => new {key = colorFullId, value = colorFullName})
                            .ToDictionary(x => x.key, x => x.value)
                    })<br/>
                    @Html.EditorFor(x => guitarSummary.Available) Наличие в магазине
                </div>

                <input type="submit" value="сохранить" style="margin-left: 30px;"/>
            </div>
        }
    }

    <br/><hr/><br/>
    
    @using (Html.BeginForm("SaveNewGuitar", "DerzkieSchi", FormMethod.Post, new { id = "newGuitar", onsubmit = "return SaveGuitar('newGuitar');" })) {
        <div class="guitar-list__guitar-node">
            <img class="guitar-node__image" src="" alt="noImg" />
            <div style="display: inline-block;">
                <input type="hidden" name="guitarsummary.ImageUrl" value="" />
                <input type="text" class="imgUrl" placeholder="Новое изображение" /><br />
                @Html.CheckBox("guitarSummary.IsGreatQualityPhoto") Очень качественное фото<br />
                <input type="button" value="Обновить изображение" onclick=" UpdateImage('newGuitar') " />
            </div>
            <div style="display: inline-block; margin-left: 30px;">
                @Html.Partial("DropDown", new DropDownModel {
                    Name = "guitarSummary.BrandId",
                    KeyValues = Model.Brands.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.Brands.Select(b => b.Name), (brandId, brandName) => new {key = brandId, value = brandName})
                        .ToDictionary(x => x.key, x => x.value)
                })<br />
                @Html.Partial("DropDown", new DropDownModel {
                    Name = "guitarSummary.FormId",
//                    KeyValues = Model.Forms.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.Forms.Select(b => b.Name), (formId, formName) => new {key = formId, value = formName})
//                        .ToDictionary(x => x.key, x => x.value)
                })<br />
                @Html.Partial("DropDown", new DropDownModel {
                    Name = "guitarSummary.ModelId",
                    KeyValues = Model.GuitarsWithModel.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.GuitarsWithModel.Select(b => b.Model), (guitarWithModelId, guitarModel) => new {key = guitarWithModelId, value = guitarModel})
                        .ToDictionary(x => x.key, x => x.value)
                })<br />
                @Html.Partial("DropDown", new DropDownModel {
                    Name = "guitarSummary.ColorFullId",
                    KeyValues = Model.FullColors.Select(b => b.Id.ToString(CultureInfo.InvariantCulture)).Zip(Model.FullColors.Select(b => b.Name), (colorFullId, colorFullName) => new {key = colorFullId, value = colorFullName})
                        .ToDictionary(x => x.key, x => x.value)
                })<br />
                @Html.CheckBox("guitarNew.Available") Наличие в магазине
            </div>

            <input type="submit" value="сохранить" style="margin-left: 30px;" />
        </div>
    }
</div>

<script type="text/javascript">
    SaveGuitar = function(formId) {
        $('#' + formId).ajaxSubmit({
            success: function (data) {
                if (data == true) {
                    alert('success');
                } else {
                    alert('ты лещ и сохраняешь корявые данные');
                }
            },
            error: function() {
                alert('error');
            }
        });
        return false;
    };

//    SaveNewGuitar = function (formId) {
//        $('#' + formId).ajaxSubmit({
//            success: function (data) {
//                if (data == true) {
//                    alert('success');
//                } else {
//                    alert('ты лещ и сохраняешь корявые данные');
//                }
//            },
//            error: function () {
//                alert('error');
//            }
//        });
//        return false;
//    };

    UpdateImage = function(formId) {
        var form = $('#' + formId);
        var imageUrl = form.find('.imgUrl').val();
        if (!imageUrl) {
            return;
        }
        form.find('img').attr('src', imageUrl);
        form.find('[name="guitarsummary.ImageUrl"]').val(imageUrl);
    };

</script>