@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization
@model MusicShareWeb.Models.Lesson.LessonNavigationModel

<div data-bind="component: 'LessonsNavigation'"></div>

<script type="text/javascript">
    lessonsModel = function() {
        var model = {};
        var data = @Html.Raw(JsonConvert.SerializeObject(Model, Formatting.Indented, new JsonSerializerSettings {ContractResolver = new CamelCasePropertyNamesContractResolver()}));
        model.lessonUrlTemplate = '@Url.Action("Index", "Lesson", new {id = ""})' + '/';
        model.guitarTechniques = data.guitarTechniques;
        model.currentLesson = data.currentLesson;
        model.lessons = data.lessons;
        model.areLessonsOpened = ko.observable(false);
        model.activeGuitarTechnique = ko.observable(null);
        model.lessonsOpenedToggle = function (obj, event, newValue) {
            if (event && event.isTrigger && !model.areLessonsOpened()) {
                newValue = false;
            } else {
                $('#PlansToggle').trigger('click');
            }
            model.areLessonsOpened(newValue !== undefined ? newValue : !model.areLessonsOpened());
            if (!model.areLessonsOpened()) {
                model.activeGuitarTechnique(null);
            }
            event.stopPropagation();
        };
        $('body').bind('click', function(event) {
            model.lessonsOpenedToggle({}, event, false);
        });
        model.setActiveGuitarTechnique = function (guitarTechniqueId) {
            model.activeGuitarTechnique(guitarTechniqueId);
        };
        model.unsetActiveGuitarTechnique = function () {
            model.activeGuitarTechnique(null);
        };
        model.getLessonsByGuitarTechniqueId = function (guitarTechniqueId) {
            return model.lessons.filter(function (lesson) {
                return lesson.guitarTechniqueId === guitarTechniqueId;
            }).sort(function (left, right) {
                return left.orderNumber - right.orderNumber;
            });
        };
        return model;
    }

    ko.components.register('LessonsNavigation', {
        viewModel: lessonsModel,
        template:               '<div id="LessonsToggle" class="lesson-top-nav__btn" data-bind="click: lessonsOpenedToggle">' +
                                    'Выбрать урок &nbsp;<span style="font-family: FontAwesome;" data-bind="text: areLessonsOpened() ? \'&#xf0d9;\' : \'&#xf0d7;\'"</span>' +
                                '</div>' +
                                '<div class="lesson-navigation__nav-lesson-list" style="position: absolute; margin-top: 40px; margin-left: -75px; z-index: 10; max-height: 300px; overflow-y: auto;" data-bind="visible: areLessonsOpened, foreach: { data: guitarTechniques, as: \'guitarTechnique\' }">' +
                                    '<div data-bind="attr: { class: $parent.activeGuitarTechnique() === guitarTechnique.id ? \'nav-lesson-list__guitar-technique nav-lesson-list__guitar-technique--active\' : \'nav-lesson-list__guitar-technique\'}">' +
                                        '<div class="nav-guitar-technique__name" data-bind="click: $parent.activeGuitarTechnique() === guitarTechnique.id ? $parent.unsetActiveGuitarTechnique : $parent.setActiveGuitarTechnique.bind($data, guitarTechnique.id), clickBubble: false, text: guitarTechnique.name"></div>' +
                                        '<div class="nav-guitar-technique__binded-lessons" data-bind="foreach: { data: $parent.getLessonsByGuitarTechniqueId(guitarTechnique.id), as: \'lesson\' }">' +
                                            '<div class="nav-binded-lessons__lesson">' +
                                                '<a class="mg-link navigation-link" data-bind="text: lesson.name, attr: {href: $parents[1].lessonUrlTemplate + lesson.id}"></a>' +
                                            '</div>' +
                                        '</div>' +
                                    '</div>' +
                                '</div>' +
                                '<!-- ko if: currentLesson && currentLesson.previousLessonId -->' +
                                '<div style="margin-top: 15px;">' +
                                    '<a class="mg-btn" data-bind="attr: { href: \'@Url.Action("Index", "Lesson", new {id = ""})\' + \'/\' + currentLesson.previousLessonId }">' +
                                        'Предыдущий урок' +
                                    '</a>' +
                                '</div>' +
                                '<!-- /ko -->' +
                                '<!-- ko if: currentLesson && currentLesson.nextLessonId -->' +
                                '<div style="margin-top: 15px;">' +
                                    '<a class="mg-btn" data-bind="attr: { href: \'@Url.Action("Index", "Lesson", new {id = ""})\' + \'/\' + currentLesson.nextLessonId }">' +
                                        'Следующий урок' +
                                    '</a>' +
                                '</div>' +
                                '<!-- /ko -->'
    });
</script>