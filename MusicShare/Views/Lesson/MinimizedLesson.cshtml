@*@using System.Text.RegularExpressions*@
@model MusicShareWeb.Models.Lesson.MinimizedLessonModel
@**@
@*@{*@
@*    Layout = "../Shared/Layout.cshtml";*@
@*    var i = 0;*@
@*    var text = Model.Lesson.Text;*@
@*    const string MetronomeTag = "@@METRONOME@@";*@
@*    var regex = new Regex(Regex.Escape(MetronomeTag));*@
@*    var replacePattern = "<div data-bind=\"template: {{ name: 'MetronomeTemplate', data: {0} }}\"></div>";*@
@*}*@
@**@
@*<audio id="BitSound" preload="auto">*@
@*    <source src="/Content/bit.ogg" type='audio/ogg; codecs="vorbis"'>*@
@*    <source src="/Content/bit.mp3" type='audio/mpeg; codecs="mp3"'>*@
@*    <source src="/Content/bit.wav" type='audio/wav; codecs="1"'>*@
@*    <source src="/Content/bit.aac" type='audio/mp4; codecs="mp4a.40.5"'>*@
@*</audio>*@
@**@
@*<div class="lesson-layout">*@
@*    <div id="LessonPage" class="lesson-page">*@
@*        <div class="lesson">*@
@*            <div class="lesson-hierarchy">*@
@*                <a class="lesson-hierarchy__link" href="@Url.Action("Index", "Lesson", new {id = ""})">Самоучитель</a> > <a class="lesson-hierarchy__link" href="#">@Model.GutarTechique.Name</a>*@
@*            </div>*@
@*            <div class="lesson__name">*@
@*                Урок @Model.Lesson.OrderNumber. @Model.Lesson.Title*@
@*            </div>*@
@*            <div class="lesson__body">*@
@*                @while(text.IndexOf(MetronomeTag, StringComparison.Ordinal) > -1) {*@
@*                    text = regex.Replace(text, String.Format(replacePattern, i), 1);*@
@*                    i++;*@
@*                }*@
@*                @Html.Raw(text)*@
@*            </div>*@
@*        </div>*@
@*        <div class="lesson-additions">*@
@*            <input type="button" class="save-exercises-speed" value="Сохранить изменения" data-bind="click: $root.saveSpeeds" />*@
@*        </div>*@
@*    </div>*@
@*</div>*@
@**@
@*<script type="text/html" id="MetronomeTemplate">*@
@*    <div class="metronome">*@
@*        <div class="metronome__speed-control">*@
@*            <div class="speed-control__up" data-bind="click: $root.speedUp.bind($data, $data)">+</div>*@
@*            <div class="speed-control__down" data-bind="click: $root.speedDown.bind($data, $data)">-</div>*@
@*        </div>*@
@*        <input type="text" class="metronome-speed" data-bind="value: $root.speeds[$data], event: {'change': $root.speedChange.bind($data, $data)}" />*@
@*        <div class="metronome-start-stop" data-bind="attr: {'value': $root.isRun() ? 'Остановить' : 'Запустить', class: $root.isRun() ? 'metronome-start-stop metronome-start-stop--start' : 'metronome-start-stop metronome-start-stop--stop'},*@
@*            click: $root.isRun() ? $root.stop.bind($data, $data) : $root.run.bind($data, $data)"></div>*@
@*    </div>*@
@*</script>*@
@**@
@**@
@**@
@*<script type="text/javascript">*@
@*    $(document).ready(function () {*@
@*        ko.applyBindings(getLesson(null, document.getElementById("Lesson")));*@
@*    });*@
@**@
@*    getLesson = function () {*@
@*        var model = {};*@
@*        model.bitSound = document.getElementById('BitSound');*@
@*//        if (!model.bitSound.src) {*@
@*//            model.bitSound.src = model.bitSound.currentSrc;*@
@*//            alert('Пытаемся сыграть ' + model.bitSound.src + '\nСыграем? -- '+ model.bitSound.canPlayType('video/ogg;codecs="theora, vorbis"'));*@
@*//        }*@
@*        model.isRun = ko.observable(false);*@
@*        model.speeds = [ @Html.Raw(String.Join(", ", Model.Speeds.Select(s => "ko.observable(" + s.Value + ")")))];*@
@*        model.activeSpeedIndex = ko.observable(undefined);*@
@*        model.loop = undefined;*@
@**@
@*        model.speedUp = function (index) {*@
@*            var wasRun = model.isRun();*@
@*            model.stop();*@
@*            model.speeds[index](model.speeds[index]() + 1.0);*@
@*            if (wasRun) {*@
@*                model.run(index);*@
@*            }*@
@*        }*@
@*        model.speedDown = function (index) {*@
@*            var wasRun = model.isRun();*@
@*            model.stop();*@
@*            model.speeds[index](model.speeds[index]() - 1.0);*@
@*            if (wasRun) {*@
@*                model.run(index);*@
@*            }*@
@*        }*@
@*        model.speedChange = function (index) {*@
@*            var wasRun = model.isRun();*@
@*            model.stop();*@
@*            model.speeds[index](parseInt(model.speeds[index](), 10));*@
@*            if (wasRun) {*@
@*                model.run(index);*@
@*            }*@
@*        }*@
@*        model.run = function (index) {*@
@*            model.activeSpeedIndex(index);*@
@*            model.isRun(true);*@
@*        }*@
@*        model.stop = function () {*@
@*            model.isRun(false);*@
@*        }*@
@*        var playSound = function () {*@
@*            model.bitSound.play();*@
@*        }*@
@*        model.isRun.subscribe(function() {*@
@*            if (model.isRun()) {*@
@*                var time = 60.0 / model.speeds[model.activeSpeedIndex()]() * 1000.0;*@
@*                playSound();*@
@*                model.loop = setInterval(playSound, time);*@
@*            } else {*@
@*                clearInterval(model.loop);*@
@*            }*@
@*        });*@
@*        model.saveSpeeds = function () {*@
@*            var speeds = {};*@
@*            var i = 0;*@
@*            ko.utils.arrayForEach(model.speeds, function (speed) {*@
@*                speeds[i.toString()] = speed().toString();*@
@*                i++;*@
@*            });*@
@*            $.ajax({*@
@*                url: '@Url.Action("SaveExercisesSpeed")',*@
@*                type: 'POST',*@
@*                traditional: true,*@
@*                contentType: "application/json; charset=utf-8",*@
@*                data: JSON.stringify({*@
@*                    lessonId: @Model.Lesson.Id,*@
@*                    speeds: speeds*@
@*                }),*@
@*                success: function (result) {*@
@*                    alert('Сохранено');*@
@*                },*@
@*                error: function (result) {*@
@*                    alert('Ошибка');*@
@*                }*@
@*            });*@
@*            return false;*@
@*        };*@
@**@
@*        return model;*@
@*    }*@
@*</script>*@